apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  # creationTimestamp: null
  labels:
    io.kompose.network/message-q: "true"
    io.kompose.service: kafka2
  name: kafka2
spec:
  containers:
    - env:
        - name: KAFKA_ADVERTISED_LISTENERS
          # value: INSIDE://zoo-1.zoo-hs.default.svc.cluster.local:9092,OUTSIDE://zoo-1.zoo-hs.default.svc.cluster.local:9096
          value: INSIDE://kafka2:9092,OUTSIDE://kafka2:9096
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_CREATE_TOPICS
          value: userMemberCreate:3:3,memberUserCreate:3:3,userMemberDelete:3:3,memberUserDelete:3:3
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: KAFKA_LISTENERS
          value: INSIDE://:9092,OUTSIDE://:9096
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo-0.zoo-hs.default.svc.cluster.local:2181,zoo-1.zoo-hs.default.svc.cluster.local:2181,zoo-2.zoo-hs.default.svc.cluster.local:2181
      image: wurstmeister/kafka:2.13-2.6.0
      name: kafka2
      ports:
        - containerPort: 9092
      resources: {}
      volumeMounts:
        - mountPath: /var/lib/kafka/data
          name: kafka2-claim1
  hostname: kafka2
  restartPolicy: OnFailure
  volumes:
    - name: kafka2-claim1
      persistentVolumeClaim:
        claimName: kafka2-claim1
status: {}
